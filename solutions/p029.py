import unittest

from pyler.pyler import EulerProblem


class Problem0029(EulerProblem, unittest.TestCase):
    """
    Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5: 22=4,
    23=8, 24=16, 25=32 32=9, 33=27, 34=81, 35=243 42=16, 43=64, 44=256, 45=1024
    52=25, 53=125, 54=625, 55=3125 If they are then placed in numerical order,
    with any repeats removed, we get the following sequence of 15 distinct
    terms: 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125 How
    many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and
    2 ≤ b ≤ 100?
    """
    problem_id = 29
    simple_input = (2, 5)
    simple_output = 15
    real_input = (2, 100)
    real_output = 9183

    @staticmethod
    def solver(input_val):
        distinct_numbers = set()
        for a in range(input_val[0], input_val[1] + 1):
            for b in range(input_val[0], input_val[1] + 1):
                distinct_numbers.add(a ** b)
                distinct_numbers.add(b ** a)
        return len(distinct_numbers)


if __name__ == '__main__':
    unittest.main()
